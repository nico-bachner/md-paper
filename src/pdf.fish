# pick first markdown the file finds and remove the .tex file extension
set FILE (string replace .tex '' (find *.tex))

function ERROR
    echo -e "\033[38;5;1mERROR: $1"
    exit 1
end

function LOADING
    echo $1

    set STEP_SIZE 5
    set TOTAL_STEPS (math "100 / $STEP_SIZE")
    set FILE_SIZE (wc -l {$FILE}.tex | cut -c 6-8)

    for k in (seq $TOTAL_STEPS)
        echo -ne "\033[K"
        echo -n "[ "

        for i in (seq $k)
            echo -n "#"
        end

        set j $i
        for j in (seq $TOTAL_STEPS)
            echo -n " "
        end

        echo -n " ]"

        set STEP (math "$k * $STEP_SIZE")
        echo -ne " $STEP %\r"

        set RANDOM (math (random) / 10000 )
        set DELAY (math "( $RANDOM + 1 ) / 10")
        sleep {$DELAY}s
    end
end

function delete
    if [ -e *.{$1} ]
        rm -f *.{$1}
    end
end

# Remove old files
delete pdf
delete log
delete aux
delete toc
delete lof
delete lot
delete bbl
delete blg
delete out

# check if bibliography exists
# if yes, process it
if [ -e *.bib ] || [ -e *.bibtex ]
    LOADING "(1/3) Processing bibliography" &
    pdflatex {$FILE}.tex >pdf.log &
    wait
    bibtex {$FILE}.aux >bib.log
    if [ -e *.pdf ]
        echo "[ #################### ] 100 %"
        echo
        rm *.pdf
    else
        ERROR "Could not process bibliography"
    end

    # convert latex to pdf using pdflatex
    LOADING "(2/3) Preparing LaTeX for conversion to PDF" &
    pdflatex {$FILE}.tex >pdf.log &
    wait
    if [ -e *.pdf ]
    
        echo "[ #################### ] 100 %"
        echo
        rm *.pdf
    else
        ERROR "PDF build failed"
    end

    # pdflatex needs to repeat the process to account for the processing of table of contents and similar environments
    LOADING "(3/3) Converting LaTeX to PDF" &
    pdflatex {$FILE}.tex >pdf.log &
    wait
    if [ -e *.pdf ]
    
        echo "[ #################### ] 100 %"
        echo
    else
        ERROR "PDF build failed"
    end
else
    # convert latex to pdf using pdflatex
    LOADING "(1/2) Preparing LaTeX for conversion to PDF" &
    pdflatex {$FILE}.tex >pdf.log &
    wait
    if [ -e *.pdf ]
    
        echo "[ #################### ] 100 %"
        echo
        rm *.pdf
    else
        ERROR "PDF build failed"
    end

    # pdflatex needs to repeat the process to account for the processing of table of contents and similar environments
    LOADING "(2/2) Converting LaTeX to PDF" &
    pdflatex {$FILE}.tex >pdf.log &
    wait
    if [ -e *.pdf ]
    
        echo "[ #################### ] 100 %"
        echo
    else
        ERROR "PDF build failed"
    end
end

# Delete build files generated by pdflatex if they exist
if [ "$1" = "--log" ] || [ "$2" = "--log" ]
    mkdir logs
    mv *.log logs/
    echo "log files are in logs folder"
else
    delete log
end
if [ "$1" = "--aux" ] || [ "$2" = "--aux" ]
    mkdir aux
    mv *.log aux/
    echo "auxiliary files are in logs folder"
else
    delete aux
    delete out
    delete toc
    delete lof
    delete lot
    delete bbl
    delete blg
end
